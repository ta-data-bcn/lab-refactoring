{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Roll the dice\n",
    "# 2 Inputs: amount of armies, attack 1/2/3 and defence 1/2\n",
    "# 2 Outputs, armies left \n",
    "\n",
    "\n",
    "def roll_the_dice(x,y):\n",
    "    if (x == 3) & (y == 2):\n",
    "        new_x=[]\n",
    "        new_y=[]\n",
    "        x_dice= random.randrange(1,7,1)\n",
    "        x_dice_2= random.randrange(1,7,1)\n",
    "        x_dice_3= random.randrange(1,7,1)\n",
    "        y_dice= random.randrange(1,7,1)\n",
    "        y_dice_2= random.randrange(1,7,1)\n",
    "        if (x_dice > y_dice) & (x_dice_2 > y_dice) & (x_dice_3 > y_dice):\n",
    "            if (x_dice > y_dice_2) & (x_dice_2 > y_dice_2) & (x_dice_3 > y_dice_2):\n",
    "                print(\"Attack wins\")\n",
    "                new_x=3\n",
    "                new_y=0\n",
    "            elif (x_dice <= y_dice_2) & (x_dice_2 <= y_dice_2) & (x_dice_3 <= y_dice_2):\n",
    "                print(\"Draw\")\n",
    "                new_x= 2\n",
    "                new_y= 1\n",
    "            elif (x_dice <= y_dice_2) | (x_dice_2 <= y_dice_2) | (x_dice_3 <= y_dice_2):\n",
    "                if (x_dice_2 <= y_dice_2) | (x_dice_3 <= y_dice_2):\n",
    "                    print(\"Draw\")\n",
    "                    new_x= 2\n",
    "                    new_y= 1\n",
    "                     \n",
    "                                       \n",
    "        elif (x_dice > y_dice_2) & (x_dice_2 > y_dice_2) & (x_dice_3 > y_dice_2):\n",
    "            if (x_dice > y_dice) & (x_dice_2 > y_dice) & (x_dice_3 > y_dice):\n",
    "                print(\"Attack wins\")\n",
    "                new_x=3\n",
    "                new_y=0\n",
    "            elif (x_dice <= y_dice) & (x_dice_2 <= y_dice) & (x_dice_3 <= y_dice):\n",
    "                print(\"Draw\")\n",
    "                new_x= 2\n",
    "                new_y= 1\n",
    "            elif (x_dice <= y_dice) | (x_dice_2 <= y_dice) | (x_dice_3 <= y_dice):\n",
    "                if (x_dice_2 <= y_dice) | (x_dice_3 <= y_dice):\n",
    "                    print(\"Draw\")\n",
    "                    new_x= 2\n",
    "                    new_y= 1\n",
    "                     \n",
    "       \n",
    "        \n",
    "        elif (x_dice <= y_dice) & (x_dice_2 <= y_dice) & (x_dice_3 <= y_dice):\n",
    "            if (x_dice <= y_dice_2) & (x_dice_2 <= y_dice_2) & (x_dice_3 <= y_dice_2):\n",
    "                print(\"Defence wins\")\n",
    "                new_x= 1\n",
    "                new_y= 2\n",
    "            elif (x_dice <= y_dice_2) | (x_dice_2 <= y_dice_2) | (x_dice_3 <= y_dice_2):\n",
    "                if (x_dice <= y_dice_2) & (x_dice_2 <= y_dice_2):\n",
    "                    print(\"Defence wins\")\n",
    "                    new_x=1\n",
    "                    new_y=2\n",
    "                elif (x_dice <= y_dice_2) & (x_dice_3 <= y_dice_2):\n",
    "                    print(\"Defence wins\")\n",
    "                    new_x=1\n",
    "                    new_y=2\n",
    "                elif (x_dice_2 <= y_dice_2) & (x_dice_3 <= y_dice_2):\n",
    "                    print(\"Defence wins\")\n",
    "                    new_x=1\n",
    "                    new_y=2\n",
    "                else:\n",
    "                    print(\"Draw\")\n",
    "                    new_x=1\n",
    "                    new_y=1\n",
    "                \n",
    "  \n",
    "        elif (x_dice <= y_dice_2) & (x_dice_2 <= y_dice_2) & (x_dice_3 <= y_dice_2):\n",
    "            if (x_dice <= y_dice) & (x_dice_2 <= y_dice) & (x_dice_3 <= y_dice):\n",
    "                print(\"Defence wins\")\n",
    "                new_x= 1\n",
    "                new_y= 2\n",
    "            elif (x_dice <= y_dice) | (x_dice_2 <= y_dice) | (x_dice_3 <= y_dice):\n",
    "                if (x_dice <= y_dice) & (x_dice_2 <= y_dice):\n",
    "                    print(\"Defence wins\")\n",
    "                    new_x=1\n",
    "                    new_y=2\n",
    "                elif (x_dice <= y_dice) & (x_dice_3 <= y_dice):\n",
    "                    print(\"Defence wins\")\n",
    "                    new_x=1\n",
    "                    new_y=2\n",
    "                elif (x_dice_2 <= y_dice) & (x_dice_3 <= y_dice):\n",
    "                    print(\"Defence wins\")\n",
    "                    new_x=1\n",
    "                    new_y=2\n",
    "                else:\n",
    "                    print(\"Draw\")\n",
    "                    new_x=1\n",
    "                    new_y=1\n",
    "        \n",
    "        elif (x_dice > y_dice) | (x_dice_2 > y_dice) | (x_dice_3 > y_dice):\n",
    "            if y_dice > y_dice_2:            \n",
    "                if (x_dice > y_dice):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice_2 > y_dice_2) | (x_dice_3 > y_dice_2):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                        \n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "            \n",
    "                if (x_dice_2 > y_dice):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice > y_dice_2) | (x_dice_3 > y_dice_2):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                        \n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "                               \n",
    "                if (x_dice_3 > y_dice):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice > y_dice_2) | (x_dice_2 > y_dice_2):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                        \n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "            \n",
    "            \n",
    "            elif y_dice < y_dice_2:\n",
    "                if (x_dice > y_dice_2):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice_2 > y_dice) | (x_dice_3 > y_dice):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "                    \n",
    "                if (x_dice_2 > y_dice_2):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice > y_dice) | (x_dice_3 > y_dice):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "                        \n",
    "                if (x_dice_3 > y_dice_2):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice > y_dice) | (x_dice_2 > y_dice):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "                        \n",
    "            elif y_dice == y_dice_2:\n",
    "                if (x_dice > y_dice):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice_2 > y_dice_2) | (x_dice_3 > y_dice_2):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                        \n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "            \n",
    "                if (x_dice_2 > y_dice):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice > y_dice_2) | (x_dice_3 > y_dice_2):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                        \n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "                               \n",
    "                if (x_dice_3 > y_dice):\n",
    "                    print(\"Attack wins at least one\")\n",
    "                    if (x_dice > y_dice_2) | (x_dice_2 > y_dice_2):\n",
    "                        print(\"Attack wins\")\n",
    "                        new_x= 3\n",
    "                        new_y= 0\n",
    "                        \n",
    "                    else:\n",
    "                        print(\"Draw\")\n",
    "                        new_x= 2\n",
    "                        new_y= 1\n",
    "                \n",
    "                       \n",
    "        else:\n",
    "            print(\"test\")\n",
    "                 \n",
    "             \n",
    "    elif (x== 3) & (y == 1):\n",
    "        new_x=[]\n",
    "        new_y=[]\n",
    "        x_dice= random.randrange(1,7,1)\n",
    "        x_dice_2= random.randrange(1,7,1)\n",
    "        x_dice_3= random.randrange(1,7,1)\n",
    "        y_dice= random.randrange(1,7,1)\n",
    "        if(x_dice > y_dice) | (x_dice_2 > y_dice) | (x_dice_3 > y_dice):\n",
    "            print(\"Attack wins\")\n",
    "            new_x= 3\n",
    "            new_y=0\n",
    "        elif (y_dice >= x_dice) & (y_dice >= x_dice_2) & (y_dice >= x_dice_3):\n",
    "            print(\"Defence wins\")\n",
    "            new_x=2\n",
    "            new_y=1\n",
    "        \n",
    "        \n",
    "    elif (x == 2) & (y == 2):\n",
    "        new_x=[]\n",
    "        new_y=[]\n",
    "        x_dice= random.randrange(1,7,1)\n",
    "        x_dice_2= random.randrange(1,7,1)\n",
    "        y_dice= random.randrange(1,7,1)\n",
    "        y_dice_2= random.randrange(1,7,1)\n",
    "        if (x_dice > y_dice) & (x_dice > y_dice_2):\n",
    "            print(\"First attack wins\")\n",
    "            if (x_dice_2 > y_dice) & (x_dice_2 > y_dice_2):\n",
    "                print(\"Attack wins\")\n",
    "                new_x= 2\n",
    "                new_y= 0\n",
    "            elif (x_dice_2 <= y_dice) & (x_dice_2 <= y_dice_2):\n",
    "                print(\"Draw\")\n",
    "                new_x=1\n",
    "                new_y=1\n",
    "            elif (x_dice_2 > y_dice) | (x_dice_2 > y_dice_2):\n",
    "                print(\"Attack wins\")\n",
    "                new_x=2\n",
    "                new_y=0\n",
    "        if (x_dice_2 > y_dice) & (x_dice_2 > y_dice_2):\n",
    "            print(\"Second attack wins\")\n",
    "            if x_dice > y_dice & x_dice > y_dice_2:\n",
    "                print(\"Attack wins\")\n",
    "                new_x= 2\n",
    "                new_y= 0\n",
    "            elif (x_dice <= y_dice) & (x_dice <= y_dice_2):\n",
    "                print(\"Draw\")\n",
    "                new_x=1\n",
    "                new_y=1\n",
    "            elif (x_dice > y_dice) | (x_dice > y_dice_2):\n",
    "                print(\"Attack wins\")\n",
    "                new_x=2\n",
    "                new_y=0\n",
    "                                    \n",
    "    elif (x == 2) & (y == 1):\n",
    "        new_x=[]\n",
    "        new_y=[]\n",
    "        x_dice= random.randrange(1,7,1)\n",
    "        x_dice_2= random.randrange(1,7,1)\n",
    "        y_dice= random.randrange(1,7,1)\n",
    "        if x_dice > y_dice | x_dice_2 > y_dice:\n",
    "            print(\"Attack wins\")\n",
    "            new_x= 2\n",
    "            new_y= 0\n",
    "        elif y_dice >= x_dice & y_dice >= x_dice_2:\n",
    "            print(\"Defence wins\")\n",
    "            new_x=1\n",
    "            new_y=1\n",
    "                                  \n",
    "    elif (x== 1) & (y ==1):\n",
    "        new_x=[]\n",
    "        new_y=[]\n",
    "        x_dice= random.randrange(1,7,1)\n",
    "        y_dice= random.randrange(1,7,1)\n",
    "        if (x_dice) > (y_dice):\n",
    "            print(\"Attack wins\")\n",
    "            new_x= 1\n",
    "            new_y=0\n",
    "            \n",
    "        elif (y_dice) >= (x_dice):\n",
    "            print(\"Defence wins\")\n",
    "            new_x=0\n",
    "            new_y=1  \n",
    "                                     \n",
    "    elif (x == 1) & (y == 2):\n",
    "        new_x=[]\n",
    "        new_y=[]\n",
    "        x_dice= random.randrange(1,7,1)\n",
    "        y_dice= random.randrange(1,7,1)\n",
    "        y_dice_2= random.randrange(1,7,1)\n",
    "        if x_dice > y_dice & x_dice > y_dice_2:\n",
    "            print(\"Attack wins\")\n",
    "            new_x= 1\n",
    "            new_y= 1\n",
    "        elif y_dice >= x_dice | y_dice_2 >= x_dice:\n",
    "            print(\"Defence wins\")\n",
    "            new_x=0\n",
    "            new_y=2\n",
    "          \n",
    "    else:\n",
    "        print(\"Nothing happens\")\n",
    "        \n",
    "    \n",
    "    return [new_x,new_y]  \n",
    "        \n",
    "        \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How many will attack?: 4\n",
      "How many will attack?: 3\n",
      "How many will defend?: 1\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "NoneType"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# # Method 1, while loop\n",
    "\n",
    "# attack= int(input(\"How many attack: \"))\n",
    "# while attack > 3:\n",
    "#     attack = int(input(\"How many attack?: \"))\n",
    "    \n",
    "# defence= int(input(\"How many defence?: \"))\n",
    "# while defence > 2:\n",
    "#     defence= int(input(\"How many defence?: \"))\n",
    "\n",
    "    \n",
    "# roll_the_dice(attack,defence)\n",
    "\n",
    "\n",
    "# Method 2, function/error handling\n",
    "\n",
    "def attack_dice_ask():\n",
    "    try:\n",
    "        attack= int(input(\"How many will attack?: \"))\n",
    "        while attack > 3:\n",
    "            attack= int(input(\"How many will attack?: \"))    \n",
    "    except:\n",
    "        print(\"you can not attack with that amount!\")\n",
    "        attack_dice_ask()\n",
    "\n",
    "\n",
    "def defence_dice_ask():\n",
    "    try:\n",
    "        defence= int(input(\"How many will defend?: \"))\n",
    "        while defence > 2:\n",
    "            defence= int(input(\"How many will defend?: \"))    \n",
    "    except:\n",
    "        print(\"you can not defend with that amount!\")\n",
    "        defence_dice_ask()\n",
    "        \n",
    "        \n",
    "        \n",
    "attack= attack_dice_ask()\n",
    "defence= defence_dice_ask()\n",
    "type(attack)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How many will attack?: 3\n",
      "How many will defend?: 1\n",
      "Defence wins\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[2, 1]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "roll_the_dice(int(input(\"How many will attack?: \")),int(input(\"How many will defend?: \")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
